{"version":3,"sources":["../../../src/app/itemEdit.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;IAEhB,QAAQ,WAAR,QAAQ;cAAR,QAAQ;;AACjB,aADS,QAAQ,CACL,KAAK,EAAE;8BADV,QAAQ;;;;2EAAR,QAAQ,aAEP,KAAK;;AAEX,cAAK,KAAK,GAAG,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;AACxB,cAAK,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;AACrC,cAAK,YAAY,GAAG,MAAK,YAAY,CAAC,IAAI,OAAM,CAAC;AACjD,cAAK,gBAAgB,GAAG,MAAK,gBAAgB,CAAC,IAAI,OAAM,CAAC;;KAC5D;;iBARQ,QAAQ;;yCAUA,CAAC,EAAE;AAChB,gBAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;AACtC,mBAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACpC;;;qCAEY,CAAC,EAAE;AACZ,aAAC,CAAC,cAAc,EAAE,CAAC;AACnB,gBAAI,IAAI,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAA;AAC5D,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,gBAAI,CAAC,WAAW,CAAC,IAAI,CAAC;;AAAC,AAEvB,gBAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;SAC7B;;;+BAEM;AACH,qBAAS,EAAE,GAAG;AACV,uBAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA,GAAI,OAAO,CAAC,CAC3C,QAAQ,CAAC,EAAE,CAAC,CACZ,SAAS,CAAC,CAAC,CAAC,CAAC;aACrB;;AAED,mBAAO,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAC9C,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;SACvC;;;iCAEQ;AACL,mBAAQ;;kBAAM,SAAS,EAAC,aAAa,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,AAAC;gBAC1D;;sBAAK,SAAS,EAAC,YAAY;oBACvB;;0BAAO,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,oBAAoB;;qBAAiB;oBACxE;;0BAAK,SAAS,EAAC,aAAa;wBACxB,+BAAO,IAAI,EAAC,MAAM;AACX,qCAAS,EAAC,cAAc;AACxB,8BAAE,EAAC,oBAAoB;AACvB,uCAAW,EAAC,iBAAiB;AAC7B,iCAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,AAAC;AACvB,oCAAQ,EAAE,IAAI,CAAC,gBAAgB,AAAC;0BACrC;wBACF;;8BAAM,SAAS,EAAC,iBAAiB;4BAC7B;;kCAAQ,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,iBAAiB;;6BAAc;yBAC5D;qBACL;iBACJ;aACH,CAAC;SACf;;;WArDQ,QAAQ;GAAS,KAAK,CAAC,SAAS","file":"itemEdit.js","sourcesContent":["var React = require('react');\n\nexport class ItemEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        //console.log(thing);\n        this.state = {name: ''};\n        this.onItemAdded = props.onItemAdded;\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTextChange = this.handleTextChange.bind(this);\n    }\n\n    handleTextChange(e) {\n        this.setState({name: e.target.value});\n        console.log('t', e.target.value);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let item = { id: this.guid(), name: this.state.name.trim() }\n        console.log(item);\n        this.onItemAdded(item);\n        // TODO: send request to the server\n        this.setState({name: ''});\n    }\n\n    guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    render() {\n        return (<form className=\"form-inline\" onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label className=\"sr-only\" htmlFor=\"exampleInputAmount\">New Item</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               id=\"exampleInputAmount\"\n                               placeholder=\"Something Great\"\n                               value={this.state.name}\n                               onChange={this.handleTextChange}\n                        />\n                        <span className=\"input-group-btn\">\n                            <button type=\"submit\" className=\"btn btn-default\">Post</button>\n                        </span>\n                    </div>\n                </div>\n            </form>)\n    };\n\n}\n\n"]}