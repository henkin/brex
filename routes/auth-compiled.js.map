{"version":3,"sources":["auth.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAC9B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEnC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,mBAAmB,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAC5D,OAAG,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAC,CAAC,CAAC;CAC3C,CAAC,CAAC;;AAEH,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACrC,OAAG,CAAC,MAAM,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAC,CAAC,CAAC;CACzC,CAAC;;;;;;;AAAC,AAOH,MAAM,CAAC,GAAG,CAAC,SAAS,EAChB,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAC,KAAK,EAAE,CAAC,4CAA4C,CAAC,EAAC,CAAC,EACxF,UAAU,GAAG,EAAE,GAAG,EAAE;;;CAGnB,CAAC;;;;;;;AAAC,AAOP,MAAM,CAAC,GAAG,CAAC,kBAAkB,EACzB,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAC,eAAe,EAAE,QAAQ,EAAC,CAAC,EAC5D,UAAU,GAAG,EAAE,GAAG,EAAE;AAChB,OAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CACrB,CACJ,CAAC;;AAEF,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACtC,OAAG,CAAC,MAAM,EAAE,CAAC;AACb,OAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CACrB,CAAC;;;;;;;AAAC,AAOH,SAAS,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACzC,QAAI,GAAG,CAAC,eAAe,EAAE,EAAE;AACvB,eAAO,IAAI,EAAE,CAAC;KACjB;AACD,OAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;CAC1B;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"auth-compiled.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar passport = require('passport');\n\nrouter.get('/account', ensureAuthenticated, function (req, res) {\n    res.render('account', {user: req.user});\n});\n\nrouter.get('/login', function (req, res) {\n    res.render('login', {user: req.user});\n});\n\n// GET /auth/google\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  The first step in Google authentication will involve\n//   redirecting the user to google.com.  After authorization, Google\n//   will redirect the user back to this application at /auth/google/callback\nrouter.get('/google',\n    passport.authenticate('google', {scope: ['https://www.googleapis.com/auth/plus.login']}),\n    function (req, res) {\n        // The request will be redirected to Google for authentication, so this\n        // function will not be called.\n    });\n\n// GET /auth/google/callback\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  If authentication fails, the user will be redirected back to the\n//   login page.  Otherwise, the primary route function function will be called,\n//   which, in this example, will redirect the user to the home page.\nrouter.get('/google/callback',\n    passport.authenticate('google', {failureRedirect: '/login'}),\n    function (req, res) {\n        res.redirect('/');\n    }\n);\n\nrouter.get('/logout', function (req, res) {\n    req.logout();\n    res.redirect('/');\n});\n\n// Simple route middleware to ensure user is authenticated.\n//   Use this route middleware on any resource that needs to be protected.  If\n//   the request is authenticated (typically via a persistent login session),\n//   the request will proceed.  Otherwise, the user will be redirected to the\n//   login page.\nfunction ensureAuthenticated(req, res, next) {\n    if (req.isAuthenticated()) {\n        return next();\n    }\n    res.redirect('/login');\n}\n\nmodule.exports = router;\n"]}